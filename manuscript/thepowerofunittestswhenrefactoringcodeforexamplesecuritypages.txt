##  The Power of UnitTests when refactoring code (for example Security Pages) 

Following a use-case usability requirement, I just changed the new TeamMentor 'password forgot' page ...  
  
... from:  [![image](images/image_thumb_25255B1_25255D1.png)](http://lh5.ggpht.com/-Dhkp7ySq8CU/UTihOBFwsSI/AAAAAAAAKI8/ZxdJNEpBaFg/s1600-h/image%25255B3%25255D.png)  ...to:  [![image](images/image_thumb_25255B3_25255D1.png)](http://lh5.ggpht.com/-XjrQkdN-CT4/UTihPCWE6II/AAAAAAAAKJM/npRmkC25mpw/s1600-h/image%25255B7%25255D.png)

The objective with the new version is to only ask the user for its password (a good example of how the 'more secure version' has severe usability problems (what happens if the user can't remember his username?)).

After I implemented the changes in the back-end, before I even try it on the GUI, I went to my the back-end unit tests project, and got a number of new errors:

[![image](images/image_thumb_25255B4_25255D.png)](http://lh6.ggpht.com/-RnzB06eYjWU/UTihQHd9PZI/AAAAAAAAKJc/gXlPo3Ch7sc/s1600-h/image%25255B10%25255D.png)

All from this UnitTest:

[![image](images/image_thumb_25255B5_25255D.png)](http://lh5.ggpht.com/-aEf6IFOjTcg/UTihRFSkS5I/AAAAAAAAKJs/9AMhlefZ_6w/s1600-h/image%25255B13%25255D.png)

This is what i was expecting (since the internal behavior changed from requiring a valid username+email to reset the password, to just requiring an email)

And after a couple minor changes:

[![image](images/image_thumb_25255B8_25255D.png)](http://lh4.ggpht.com/-6TOQMyvA8a4/UTihSPnL7aI/AAAAAAAAKJ8/7pUkV0odu84/s1600-h/image%25255B22%25255D.png)

The PasswordResetToken test is working:

[![image](images/image_thumb_25255B7_25255D.png)](http://lh4.ggpht.com/-ziz3zgxvkog/UTihTBMHYEI/AAAAAAAAKKM/jJ0J0SopCss/s1600-h/image%25255B19%25255D.png)

Which confirms that the password reset workflow is still working (including security checks like now allowing the password reset token to be used more than once)

Btw, can you see how powerful these unit tests can be for Security Testing to enforce security policies?

If only there was something like an  [OWASP ESTAPI ](http://blog.diniscruz.com/2011/06/estapi-idea.html)I could use, and measure my code against? :) 
